package br.com.targettrust.locadora.db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import br.com.targettrust.locadora.entidades.Equipamento;

public class EquipamentoRepositoryImpl {

	
	public void insertEquipamento(Equipamento equipamento) {
		try {
			String sql = "INSERT INTO equipamento(" + "	descricao)"
					+ "	VALUES (?)";
			Connection connection = getConnection();
			PreparedStatement statement = connection.prepareStatement(sql);
			statement.setString(1, equipamento.getDescricao());
			statement.executeUpdate();
			statement.close();
			connection.close();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		System.out.println("Equipamento inserido com sucesso");
	}

	
	public void updateEquipamento(Equipamento Equipamento) {
		// TODO Auto-generated method stub
        String sql = "UPDATE equipamento " 
        		   + "SET descricao=?"
        		   + "WHERE id=?";
        try {
	        Connection connection = getConnection();
			PreparedStatement statement = connection.prepareStatement(sql);
			statement.setString(1, Equipamento.getDescricao());
			statement.executeUpdate();
			statement.close();
			connection.close();
        } catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		System.out.println("Equipamento alterado com sucesso");
	}
        

	@Override
	public List<Equipamento> listEquipamentos() {
		// TODO Auto-generated method stub
		try {
			String sql = "select * from Equipamento";
			Connection connection = getConnection();
			Statement statement = connection.createStatement();
			ResultSet resultSet = statement.executeQuery(sql);
			List<Equipamento> Equipamentos = new ArrayList<>();
			while (resultSet.next()) {
				Equipamento Equipamento = new Equipamento();
				// popular
				Equipamento.setDescricao(resultSet.getString("descricao"));
				Equipamentos.add(Equipamento);
			}
			return Equipamentos;
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public void delete(Integer id) {
		// TODO Auto-generated method stub

	}

	private Connection getConnection() {
		Connection connection = null;
		try {
			connection = DriverManager.getConnection("jdbc:postgresql://localhost:5432/Locadora", "postgres",
					"postgres");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return connection;
	}
	
	
}

